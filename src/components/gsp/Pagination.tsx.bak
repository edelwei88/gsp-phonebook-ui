import { useState } from "react";
import {
  Pagination as PaginationRoot,
  PaginationContent,
  PaginationItem,
  PaginationLink,
  PaginationNext,
  PaginationPrevious,
} from "@/components/ui/pagination";

export interface PaginationProps {
  currentPage: number;
  maxPage: number;
  className?: string;
  pageClickHandler(page: number): void;
}

function generatePages(currentPage: number, maxPage: number): number[] {
  const pages: number[] = [];
  const start = Math.max(1, currentPage - 2);
  const end = Math.min(maxPage, currentPage + 2);

  for (let i = start; i <= end; i++) {
    pages.push(i);
  }

  return pages;
}

export function Pagination(props: PaginationProps) {
  const [currentPage, setCurrentPage] = useState<number>(props.currentPage);

  return (
    <PaginationRoot>
      <PaginationContent>
        <PaginationItem>
          <PaginationPrevious
            onClick={() => {
              setCurrentPage(currentPage - 1);
              props.pageClickHandler(currentPage - 1);
            }}
            isActive={currentPage > 1 ? true : false}
            className={
              currentPage === 1 ? "pointer-events-none opacity-50" : ""
            }
          />
        </PaginationItem>

        {generatePages(currentPage, props.maxPage).map((item) => (
          <PaginationItem key={item}>
            <PaginationLink
              onClick={() => {
                setCurrentPage(item);
                props.pageClickHandler(item);
              }}
              className={currentPage == item ? "font-bold" : ""}
            >
              {item}
            </PaginationLink>
          </PaginationItem>
        ))}

        <PaginationItem>
          <PaginationNext
            onClick={() => {
              setCurrentPage(currentPage + 1);
              props.pageClickHandler(currentPage + 1);
            }}
            isActive={currentPage === props.maxPage ? false : true}
            className={
              currentPage === props.maxPage
                ? "pointer-events-none opacity-50"
                : ""
            }
          />
        </PaginationItem>
      </PaginationContent>
    </PaginationRoot>
  );
}
